coordination_task:
  agent: coordinator_agent
  description: >
    Engage in a natural, human-centered conversation with the educator to refine and finalize
    their course request, and then coordinate the subsequent HAILEI agentic design process.

    ---
    Current course request:
    ```json
    {course_request}
    ```
    {%if last_user_message%}
    User message:
      {last_user_message}
    {%endif%}

    {%if conversation_history%}
      Conversation history:
      {conversation_history}
    {%endif%}
    ---

    🧠 **Your responsibilities:**

    **Phase 1 – Conversational refinement**
    - Respond in a warm, professional, academic tone using Markdown.
    - Acknowledge and summarize the educator’s input naturally.
    - Show a clean Markdown summary of the current course details (no raw JSON).
    - Suggest refinements **only** for the following fields if needed:
      - `course_title`, `course_description`, `course_expectations`.
      - Do *not* ask about other fields (credits, audience, assessments, etc.).
    - After your conversational Markdown, **append a JSON block** (in triple backticks, `json`-tagged)
      representing *only the updated fields* of the course request.  
      Use the schema keys:
      `course_title`, `course_description`, `course_credits`, `course_duration_weeks`,
      `course_level`, `course_expectations`.
      If no fields changed, output `{}`.

      **IMPORTANT: You must:**
      - ONLY discuss and refine the fields of the current course_request object.
      - Update the JSON block with refinements after each interaction.
      - NEVER create modules, outlines, or full course plans yourself.
      - NEVER delegate to IPDAi or any other agent until the human explicitly says
        “approve”, “looks good”, or “ready”.

    Once the human says something like “approve”, “looks good”, or “ready”, etc. you may delegate the finalized course_request
    to IPDAi for further development.

    **Phase 2 – Delegation orchestration**
    - When the user explicitly approves (e.g. says *"approve"* or clicks an approve button),
      finalize the course request and begin internal delegation automatically.
    - Proceed sequentially through these tasks:
      1. **IPDAi:** "instructional_planning_task" – build course foundation using {}.
      2. **CAuthAi:** "content_authoring_task" – develop instructional content and activities.
      3. **TFDAi:** "technical_design_task" – create LMS implementation plan.
      4. **EditorAi:** "content_review_task" – review and enhance materials for quality and accessibility.
      5. **EthosAi:** "ethical_audit_task" – perform ethical and UDL compliance audit.
    - After each delegation, summarize the results in conversational Markdown for the user.
    - Remain in the loop throughout — the Coordinator is the *only agent* that speaks to the human.

    ---
    ✅ **Output Format Example**

    ```
    Thank you for the update! Here's the refined version:

    **Course Title:** Introduction to Machine Learning  
    **Course Description:** This course covers core ML concepts and applications.  
    **Course Credits:** 3  
    **Duration:** 16 weeks  
    **Level:** Undergraduate - Introductory  
    **Expectations:** Students will train and deploy ML models using Python and PyTorch.  

    ```json
    {
      "course_description": "This course covers core ML concepts and applications.",
      "course_expectations": "Students will train and deploy ML models using Python and PyTorch."
    }
    ```
    ```

    Later (after approval), the Coordinator might say:

    ```
    ✅ Approved! Delegating to IPDAi for course foundation...
    📘 IPDAi completed the course foundation.  
    Now delegating to CAuthAi for content authoring...
    ...
    🎓 Final HAILEI Course Design Summary:
    - Course: Introduction to Machine Learning  
    - Duration: 16 weeks  
    - Level: Undergraduate - Introductory  
    - Frameworks: KDKA, PRRR, Bloom’s Taxonomy  
    - Accessibility: UDL-compliant ✅  
    - Ethical Review: Passed ✅
    ```
  expected_output: >
    A Markdown-formatted conversational reply **followed by a JSON block** enclosed in triple backticks (` ```json ... ``` `),
    representing updated course fields or an empty `{}` if none changed.
    When the user approves, the Coordinator should produce a sequential Markdown summary of each delegated stage
    (IPDAi → CAuthAi → TFDAi → EditorAi → EthosAi) and conclude with a comprehensive course design summary.
  human_input: false


  
instructional_planning_task:
  description: >
    As IPDAi, create comprehensive course foundation using HAILEI frameworks:
    
    Course Details:
    - Title: {course_title}
    - Description: {course_description} 
    - Credits: {course_credits}
    - Duration: {course_duration_weeks} weeks
    - Level: {course_level}
    - Expectations: {course_expectations}

    
    REQUIRED FRAMEWORK INPUTS:
    - KDKA Model: {kdka_framework}
    - PRRR Framework: {prrr_framework}
    
    Create:
    1. Refined course title and description (if needed)
    2. Terminal Learning Objectives (TLOs) using Bloom's Taxonomy Tool
    3. Enabling Learning Objectives (ELOs) mapped to TLOs
    4. KDKA structure (Knowledge, Delivery, Context, Assessment)
    5. Weekly module breakdown for {course_duration_weeks} weeks
    6. Draft syllabus with PRRR integration
    
    Use the Bloom's Taxonomy Tool to validate all learning objectives for appropriate cognitive complexity.
    If any course details are missing, use educational intelligence to populate them appropriately.
  expected_output: >
    Complete course foundation including draft syllabus, validated learning objectives hierarchy,
    KDKA-structured outline, weekly module plan, and PRRR integration strategy.
  human_input: false

content_authoring_task:
  description: >
    As CAuthAi, develop comprehensive instructional content based on IPDAi's course foundation:
    
    Foundation Context: Use the course foundation created by IPDAi
    - PRRR Framework: {prrr_framework}
    
    Generate for each module:
    1. PRRR-based learning activities (Personal, Relatable, Relative, Real-world)
    2. Detailed lecture outlines with key concepts
    3. Interactive exercises and assignments
    4. Discussion prompts and collaborative activities
    5. Assessment rubrics aligned with learning objectives
    6. Required and supplemental reading lists using Resource Search Tool
    
    Use the Resource Search Tool to curate high-quality educational resources for each module.
    Ensure content progression supports the specified course level and duration.
  expected_output: >
    Complete instructional content package with learning activities, assessments,
    and curated resources for all course modules in structured format.
  human_input: false

technical_design_task:
  description: >
    As TFDAi, create LMS implementation plan for the educational content from CAuthAi:
    
    Educational Content Context: Use content created by CAuthAi
    Target LMS: {lms_platform}
    
    Design specifications:
    1. LMS feature mapping (quizzes, discussions, gradebook, media)
    2. Navigation structure and user experience flow
    3. Mobile responsiveness requirements
    4. Integration needs (SCORM, LTI, external tools)
    5. Implementation timeline and resource requirements
    6. Quality assurance and testing protocols
    
    Preserve pedagogical integrity while optimizing for platform capabilities.
    Consider accessibility requirements and Universal Design for Learning principles.
  expected_output: >
    Detailed technical implementation plan with LMS specifications,
    deployment timeline, and integration requirements.
  human_input: false

content_review_task:
  description: >
    As EditorAi, perform comprehensive quality enhancement on all previous agent outputs:
    
    Content for Review: All outputs from IPDAi, CAuthAi, and TFDAi
    
    Review and enhance:
    1. Grammar, clarity, and academic tone across all materials
    2. Accessibility compliance using Accessibility Checker Tool
    3. Bloom's taxonomy alignment verification using Bloom's Taxonomy Tool
    4. KDKA framework marker validation
    5. PRRR principle integration check
    6. Consistency across all materials and agents' work
    
    Use your tools to validate compliance and provide detailed improvement recommendations.
    Generate comprehensive enhancement log documenting all changes and validations.
  expected_output: >
    Polished educational content package with comprehensive editor report
    documenting all enhancements, tool validations, and compliance checks.
  human_input: false

ethical_audit_task:
  description: >
    As EthosAi, conduct final ethical compliance review on the complete course package:
    
    Final Content: All reviewed content from EditorAi
    
    Comprehensive ethical audit:
    1. AI in Education ethical guidelines compliance
    2. Universal Design for Learning (UDL) verification using Accessibility Checker Tool
    3. Privacy and data protection assessment
    4. Bias detection and inclusivity review
    5. Cultural sensitivity validation
    6. Academic integrity safeguards
    
    Use the Accessibility Checker Tool to validate UDL compliance.
    Provide final compliance certification or specific remediation requirements.
  expected_output: >
    Final ethical audit report with compliance certification and any
    required modifications for ethical standards adherence.
  human_input: false